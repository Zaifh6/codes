/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package queuecode;

/**
 *
 * @author student
 */
public class CircularQueue {
    int[] myQueue;
    int n;
    int front;
    int rear;
    int slots;

    public CircularQueue(int size) {
        n = size;
        myQueue = new int[n];
        front = -1;
        rear = -1;
        this.slots = size;
    }

    public boolean isFull() {
        // The queue is full when the next position after rear equals front
        return (rear + 1) % n == front || slots == 0;
    }

    public boolean isEmpty() {
        // The queue is empty when front is -1 (no elements)
        return front == -1 || slots == n;
    }

    public void enqueue(int el) {
        if (isFull()) {
            System.out.println("Queue is full, cannot enqueue!");
            return;
        }
        if (front == -1) {  // The queue was empty before this insertion
            front = 0;  // Set front to 0
        }
        rear = (rear + 1) % n;  // Move rear to the next position (circular)
        myQueue[rear] = el;  // Insert the element at rear
        System.out.println("Insertion successful!");
        slots--;
    }

    public int dequeue() {
        if (isEmpty()) {
            System.out.println("Queue is empty, cannot dequeue!");
            return -1;  // Indicate error
        }
        int stored = myQueue[front];
        slots++;
        if (front == rear) {  // Queue becomes empty after this dequeue
            front = -1;
            rear = -1;
        } else {
            front = (front + 1) % n;  // Move front to the next position (circular)
        }
        return stored;
    }

    public void display() {
        if (isEmpty()) {
            System.out.println("Queue is empty!");
            return;
        }
        int i = front;
        while (i != rear) {
            System.out.print(myQueue[i] + " ");
            i = (i + 1) % n;
        }
        System.out.println(myQueue[rear]);  // Print the last element (rear)
    }
    
    public void slots(){
        System.out.println("Current Free Slots: " + slots);
    }
}

